import React, { useRef, useState } from 'react';
import { FlatList, ScrollView, StyleSheet, View } from 'react-native';

import AppAttachment from '../../../components/AppAttachment';
import AppBarChart from '../../../components/analysis/AppBarChart';
import AppCard from '../../../components/AppCard';
import AppListItem from '../../../components/AppListItem';
import AppPieChart from '../../../components/analysis/AppPieChart';
import AppText from '../../../components/AppText';
import defaultStyles from '../../../config/styles';

import { getColorScale, getDistinctProjectsCount, getSortedPieData, getTotalAmount } from '../../../functions/pie-chart';
import { getDistinctClaimTypesCountLimit, getSortedBarData } from '../../../functions/bar-chart';
import { getCardData, getListData } from '../../../functions/dashboard';

import { sampleClaims } from '../../../config/data';

function Approvals() {
    const cardData = getCardData( sampleClaims, true );
    const pieData = getSortedPieData( sampleClaims, 'project_code' );
    const colorScale = getColorScale( pieData );
    const value = getTotalAmount( sampleClaims );
    const unique_type = getDistinctProjectsCount( sampleClaims );
    const barData = getSortedBarData( sampleClaims );
    const listData = getListData( sampleClaims, true );

    const approvalsRef = useRef();

    const [ approvals_yOffset, setApprovals_YOffset ] = useState( 0 );

    return (
        <ScrollView style={ styles.container } ref={ approvalsRef }>
            <View style={ styles.spacing }>
                <FlatList
                    data={ cardData }
                    keyExtractor={( item, index ) => index.toString()}
                    numColumns={2}
                    columnWrapperStyle={ styles.columnWrapperStyle }
                    contentContainerStyle={ styles.contentContainerStyle }
                    renderItem={({ item }) => (
                        <AppCard
                            title={ item.title }
                            subTitle={ item.subtitle }
                            icon={ item.icon }
                            containerStyle={{ backgroundColor: defaultStyles.colors[item.containerColor] }}
                            titleStyle={{ fontSize: item.titleSize }}
                            subtitleStyle={{ fontSize: item.subtitleSize }}
                            onPress={() => approvalsRef.current.scrollTo({
                                x: 0,
                                y: parseInt( approvals_yOffset )-150,
                                animated: true
                            })}
                        />
                    )}
                />
            </View>
            <View style={ styles.content }>
                <View style={ styles.spacing }>
                    <AppBarChart
                        title="Department Claim Overview"
                        subTitle={`Generated by ${ getDistinctClaimTypesCountLimit(sampleClaims) } claim categories for last 3 months`}
                        data={ barData }
                    />
                </View>
                <View style={ styles.spacing }>
                    <AppPieChart
                        data={ pieData }
                        colorScale={ colorScale }
                        value={ value }
                        metric="RM"
                        content={`claimed for ${ unique_type } projects`}
                        title="Project Cost Percentage"
                        subTitle={`Generated by ${ unique_type } projects for last month`}
                    />
                </View>
                <View style={ styles.spacing }>
                    <AppText style={ styles.text }>Pending Claims</AppText>
                    <View
                        style={ styles.spacing }
                        onLayout={( event ) => {
                            event.target.measure(( fx, fy, width, height, px, py ) => {
                                setApprovals_YOffset(parseInt( py ));
                            })
                        }}
                    >
                        <FlatList
                            data={ listData }
                            keyExtractor={( item, index ) => index.toString()}
                            renderItem={({ item }) => (
                                <AppListItem
                                    AttachmentComponent={
                                        <AppAttachment 
                                            image={ item.image }
                                            height={100}
                                            width={70}
                                            resizeMode="contain"
                                            style={ styles.border }
                                        />
                                    }
                                    title={ item.title }
                                    titleStyle={[ styles.text, styles.AppListItemtitle ]}
                                    subTitle={ item.subTitle }
                                    subTitleStyle={ styles.AppCardtitle }
                                    description1='Requested by:'
                                    description1_Style={ styles.AppCardtitle }
                                    StatusComponent={
                                        <>
                                            <AppListItem
                                                AttachmentComponent={
                                                    <AppAttachment 
                                                    image={ item.user_profile }
                                                    height={30}
                                                    width={30}
                                                    resizeMode="contain"
                                                    border
                                                    />
                                                }
                                                attachmentStyle={ styles.StatusComponent_AppListItem_attachment }
                                                title={ item.name }
                                                titleStyle={ styles.StatusComponent_AppListItem_title }
                                                subTitle={ item.department }
                                                subTitleStyle={ styles.StatusComponent_AppListItem_subTitle }
                                                textStyle={ styles.StatusComponent_AppListItem_text }
                                            />
                                            <AppCard
                                                containerStyle={[ styles.AppCardcontainer, { backgroundColor: defaultStyles.colors[item.color] }]}
                                                title={ item.status }
                                                titleStyle={ styles.AppCardtitle }
                                            />
                                        </>
                                    }
                                    PostscriptComponent={
                                        <AppText style={[ styles.text, styles.AppListItemtitle ]}>RM{ item.amount.toFixed(2) }</AppText>
                                    }
                                />
                            )}
                            ItemSeparatorComponent={() => <View style={ styles.seperator } />}
                            // ListFooterComponent={ loaderComponent }
                            // onEndReached={ handleLoadMore }
                            // onEndReachedThreshold={0.5}
                        />
                    </View>
                </View>
            </View>
        </ScrollView>
    );
}

const styles = StyleSheet.create({
    AppCardcontainer: {
        alignSelf: 'flex-start',
        borderRadius: 40,
        marginTop: 7,
        paddingHorizontal: 20,
        paddingVertical: 5,
        width: null,
        shadowColor: null,
        shadowOffset: null,
        shadowOpacity: null,
        shadowRadius: null,
        elevation: null
    },
    AppCardtitle: {
        fontSize: 13
    },
    AppListItemtitle: {
        fontSize: 16
    },
    border: {
        borderColor: defaultStyles.colors.black,
        borderWidth: 1
    },
    columnWrapperStyle: {
        justifyContent: "space-between"
    },
    container: {
        flex: 1,
        paddingHorizontal: 10
    },
    content: {
        marginHorizontal: 10
    },
    contentContainerStyle: {
        padding: 10
    },
    loader: {
        flex: 0,
        marginTop: 20,
        width: '100%'
    },
    seperator: {
        height: 10
    },
    spacing: {
        marginVertical: 10
    },
    StatusComponent_AppListItem_attachment: {
        marginRight: 10
    },
    StatusComponent_AppListItem_subTitle: {
        fontSize: 9
    },
    StatusComponent_AppListItem_title: {
        fontSize: 10,
        fontWeight: 'bold'
    },
    StatusComponent_AppListItem_text: {
        marginVertical: null
    },
    text: {
        ...defaultStyles.text,
        color: defaultStyles.colors.primary,
        fontWeight: 'bold'
    }
})

export default Approvals;